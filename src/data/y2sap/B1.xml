<?xml version="1.0"?>
<!DOCTYPE profile>
<profile xmlns="http://www.suse.com/1.0/yast2ns" xmlns:config="http://www.suse.com/1.0/configns">
  <general>
    <mode>
      <final_restart_services config:type="boolean">
        false
      </final_restart_services>
    </mode>
    <ask-list config:type="list">
      <ask>
        <title>SAP BusinessOne System Parameters</title>
        <dialog config:type="integer">10</dialog>
        <element config:type="integer">30</element>
        <width config:type="integer">70</width>
        <height config:type="integer">20</height>
        <help><![CDATA[
             <p><b>SAP HANA Master Password</b><br>Enter exiting password for the SYSTEM user.<br>
	     </p>
	     ]]></help>
        <file>/tmp/ay_q_masterpass</file>
        <path>users,0,user_password</path>
        <question>SAP HANA Master Password</question>
        <password config:type="boolean">true</password>
        <stage>cont</stage>
        <default/>
        <script>
          <filename>my_pwd.sh</filename>
          <rerun_on_error config:type="boolean">true</rerun_on_error>
          <environment config:type="boolean">true</environment>
          <source><![CDATA[
function check_masterpwd() {
        # search for pwd from HANA input
        [ -f /dev/shm/ay_q_masterpass ] && return 0
        for i in `ls /data/SAP_INST/`; do
           grep HANA /data/SAP_INST/$i/product.data > /dev/null 2>&1
           if [ $? -eq 0 ]; then
              [ -f /data/SAP_INST/$i/ay_q_masterpass ] && return 0
              break
           fi
        done

        # no pwd found, read pwd (and sid/instance) from ask dialog
	local pwd=$1
        local sid=NDB
        local ino=00
        [ -f /tmp/ay_q_sid ] && sid=$(< /tmp/ay_q_sid)
	[ -f /tmp/ay_q_sapinstnr ] && ino=$(< /tmp/ay_q_sapinstnr)
        [ -z $pwd ] && exit 1
        # does it make sense to check the HANA password by a DB test connect ?
        #if [ -n $pwd ]; then
        #   lsid=`echo ${sid} | tr '[:upper:]' '[:lower:]'`
        #   su - ${lsid}adm -c "hdbsql -i ${ino} -u SYSTEM -p ${pwd} -jC 'select * from sys.dummy'" >/dev/null 2>&1
        #   rc=$?
        #   if [ $rc -ne 0 ];then
        #      echo "Connection to SAP HANA failed. Please check if HANA is running, or try another password."
        #      exit $rc
        #   fi
        #fi
        exit 0
}
check_masterpwd "$VAL"
]]></source>
          <debug config:type="boolean">false</debug>
          <feedback config:type="boolean">true</feedback>
        </script>
        <default_value_script>
          <source><![CDATA[
if [ -f /dev/shm/ay_q_masterpass ];then
   cat /dev/shm/ay_q_masterpass
else
   if [ -f /data/SAP_INST/0/ay_q_masterpass ];then
      cat /data/SAP_INST/0/ay_q_masterpass
   fi
fi
]]></source>
        </default_value_script>
        <timeout config:type="integer">1</timeout>
      </ask>
      <ask>
        <title>SAP System Parameters</title>
        <dialog config:type="integer">10</dialog>
        <element config:type="integer">10</element>
        <help><![CDATA[
             <p><b>SID (SAP System ID)</b><br>Enter the three letter SAP System ID.</p>
]]></help>
        <file>/tmp/ay_q_sid</file>
        <question>SID (SAP HANA System ID)</question>
        <stage>cont</stage>
        <default>NDB</default>
        <script>
          <filename>my_sid.sh</filename>
          <rerun_on_error config:type="boolean">true</rerun_on_error>
          <environment config:type="boolean">true</environment>
          <source><![CDATA[
function check_sid() {
        [ -f /data/SAP_INST/0/ay_q_sid ] && exit 0
        [ -f /dev/shm/ay_q_sid ] && exit 0

        local sid=$1 reserved_sids rsid
        reserved_sids="ADD ALL AND ANY ASC COM DBA END EPS FOR GID IBM INT \
        KEY LOG MON NIX NOT OFF OMS RAW ROW SAP SET SGA SHG SID SQL SYS TMP \
        UID USR VAR"

        LC_ALL=POSIX

        [ -z "$sid" ] && echo "You need to provide a SID." && return 1
        [ "${#sid}" -ne 3 ] && echo "The SID needs to be exactly 3 chars. You entered '${sid}'." && return 1
        [ "${sid#[0-9]}" != "$sid" ] && echo "The SID needs to start with a letter. You entered '${sid}'." && return 1
        [ -n "${sid//[0-9A-Z]/}" ] && echo "The SID needs to be upper case. You entered '${sid}'." && return 1
        for rsid in $reserved_sids; do
                case $sid in
                        $rsid)
                                echo "The SID '${sid}' is reserved and cannot be used."
                                return 1
                                ;;
                esac
         done
         [ "${sid}" = "DAA" ] && echo "The System ID \"DAA\" is reserved for the Solution Manager Diagnostics Agent. Please choose a different one." && return 1
         return 0
}
check_sid "$VAL"
]]></source>
          <debug config:type="boolean">false</debug>
          <feedback config:type="boolean">true</feedback>
        </script>
        <default_value_script>
          <source><![CDATA[
if [ -e /data/SAP_INST/0/ay_q_sid ]; then
     cat /data/SAP_INST/0/ay_q_sid; echo -n ":"; cat /data/SAP_INST/0/ay_q_sapinstnr 
elif [ -f /dev/shm/ay_q_sid ]; then 
     cat /dev/shm/ay_q_sid ; echo -n ":"; cat /dev/shm/ay_q_sapinstnr
else
     /usr/share/YaST/include/sap-installation-wizard/b1_hana_list.sh
fi 
]]></source>
        </default_value_script>
        <timeout config:type="integer">1</timeout>
      </ask>
    </ask-list>
  </general>
  <software>
    <!-- post-patterns config:type="list">
    <pattern>sap-b1</pattern>
  </post-patterns -->
    <post-packages config:type="list">
      <package>patterns-sap-b1</package>
    </post-packages>
  </software>
</profile>

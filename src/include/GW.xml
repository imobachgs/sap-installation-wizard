<?xml version="1.0"?>
<!DOCTYPE profile>
<profile xmlns="http://www.suse.com/1.0/yast2ns" xmlns:config="http://www.suse.com/1.0/configns">
<general>
  <ask-list config:type="list">
  
          <ask>
             <title>SAP System Parameters</title>
             <dialog config:type="integer">10</dialog>
             <element config:type="integer">30</element>
             <help><![CDATA[
             <p><b>SAP Master Password</b><br>Enter and repeat the master password for the SAP system.<br>
		The system uses this master password for all accounts created by the installer<br> 
		and for the secure store key phrase.<br>
		The password must fulfill the following requirements:<br>
		- Consists of 8 or 9 characters<br>
		- Contains at least one digit and one lowercase character<br> 
		- It can contain these special characters: #, $, @, _<br>
		- It does not have a digit or an underscore (_) as the first character
	     </p>
	     ]]>
	     </help>
             <file>/tmp/ay_q_masterpass</file>
             <path>users,0,user_password</path>
             <question>SAP Master Password</question>
             <password config:type="boolean">true</password>
             <stage>cont</stage>
             <default></default>
             <script>
                <filename>my_pwd.sh</filename>
                <rerun_on_error config:type="boolean">true</rerun_on_error>
                <environment config:type="boolean">true</environment>
                <source><![CDATA[
function check_masterpwd() {
	local pwd=$( cat /tmp/ay_q_masterpass )

        if [ -z "$pwd" ]; then
		echo "You must provide a master password for your installation!"
		exit 1
        fi
	if [ "${#pwd}" -gt 9 ]; then 
		echo "The master password cannot be longer than 9 chars currently."
		echo "You entered a ${#pwd} chars long password." 
		exit 1
        fi
	if [ "${#pwd}" -lt 8 ]; then
		echo "The master password cannot be shorter than 8 chars."
		echo "You entered a ${#pwd} chars long password."
		exit 1
	fi
        if [ -n "${pwd//[0-9A-Za-z\$@_#]/}" ]; then
		echo "The Password contains forbidden chars."
		echo "Allowed are 0-9, A-Z, a-z and $ @ _ #"
		echo "But you're using: '${pwd//[0-9A-Za-z_@#]/}'."
		exit 1
	fi	
        if [ -z "${pwd//[A-Za-z\$@_#]/}" ]; then
		echo "The Password must at least contain one numeric character 0-9."
		exit 1
        fi
	if [ "${pwd#[_]}" != "$pwd" ]; then
		echo "The Password may not start with a '_'." 
		exit 1
        fi
	if [ "${pwd#[0-9]}" != "$pwd" ]; then
		echo "The Password may not start with a numeric character."
		exit 1
	fi
        exit 0
}
check_masterpwd "$VAL"
]]>
                </source>
                <debug config:type="boolean">false</debug>
                <feedback config:type="boolean">true</feedback>
             </script>
          </ask>
	<ask>
	     <title>SAP System Parameters</title>
             <dialog config:type="integer">10</dialog>
             <element config:type="integer">10</element>
             <help><![CDATA[
             <p><b>SID (SAP System ID)</b><br>Enter the three letter SAP System ID.</p>
]]>
</help>
             <file>/tmp/ay_q_sid</file>
             <question>SID (SAP System ID)</question>
             <stage>cont</stage>
             <default>MY_DEFAULT_SID</default>
            <script>
              <filename>my_sid.sh</filename>
              <rerun_on_error config:type="boolean">true</rerun_on_error>
              <environment config:type="boolean">true</environment>
              <source><![CDATA[
function check_sid() {
        local sid=$1 reserved_sids rsid
        reserved_sids="ADD ALL AND ANY ASC COM DBA END EPS FOR GID IBM INT \
        KEY LOG MON NIX NOT OFF OMS RAW ROW SAP SET SGA SHG SID SQL SYS TMP \
        UID USR VAR"

        LC_ALL=POSIX

        [ -z "$sid" ] && echo "You need to provide a SID." && return 1
        [ "${#sid}" -ne 3 ] && echo "The SID needs to be exactly 3 chars. You entered '${sid}'." && return 1
        [ "${sid#[0-9]}" != "$sid" ] && echo "The SID needs to start with a letter. You entered '${sid}'." && return 1
        [ -n "${sid//[0-9A-Z]/}" ] && echo "The SID needs to be upper case. You entered '${sid}'." && return 1
        for rsid in $reserved_sids; do
                case $sid in
                        $rsid)
                                echo "The SID '${sid}' is reserved and cannot be used."
                                return 1
                                ;;
                esac
         done
         [ "${sid}" = "DAA" ] && echo "The System ID \"DAA\" is reserved for the Solution Manager Diagnostics Agent. Please choose a different one." && return 1
         return 0
}
check_sid "$VAL"
]]>
              </source>
              <debug config:type="boolean">false</debug>
              <feedback config:type="boolean">true</feedback>
            </script>
          </ask>
<ask>
	     <title>SAP System Parameters</title>
             <dialog config:type="integer">10</dialog>
             <element config:type="integer">50</element>
             <help><![CDATA[
             <p><b>Gateway Instance Number</b><br>Enter the Gateway system's instance number.</p>
]]>
</help>
             <file>/tmp/ay_q_gateway_nr</file>
             <question>Gateway Instance Number</question>
             <stage>cont</stage>
             <script>
              <filename>my_gw_ino.sh</filename>
              <rerun_on_error config:type="boolean">true</rerun_on_error>
              <environment config:type="boolean">true</environment>
              <source><![CDATA[
function check_instance_no() {
        local ino=$1

        LC_ALL=POSIX

        [ -z "$ino" ] && echo "You need to provide a Gateway Instance Number." && return 1
        [ "${#ino}" -ne 2 ] && echo "The Gateway Instance Number needs to be exactly 2 digits long. You entered '${ino}'." && return 1
        [ -n "${ino//[0-9]/}" ] && echo "The SAP Instance Number can only contain digits. You entered '${ino}'." && return 1

        return 0
}
check_instance_no "$VAL"
]]>
              </source>
              <debug config:type="boolean">false</debug>
              <feedback config:type="boolean">true</feedback>
            </script>
            <default>00</default>
          </ask>
 </ask-list>
</general>
<software>
  <post-packages config:type="list">
    <package>autofs</package>
    <package>bind-utils</package>
    <package>cifs-mount</package>
    <package>compat-32bit</package>
    <package>compat-libldap-2_3-0</package>
    <package>compat-openssl097g-32bit</package>
    <package>compat-openssl097g</package>
    <package>gcc</package>
    <package>gdb</package>
    <package>glibc-devel</package>
    <package>ksh</package>
    <package>libstdc++33-32bit</package>
    <package>libstdc++33</package>
    <package>lsof</package>
    <package>lukemftp</package>
    <package>mcelog</package>
    <package>nscd</package>
    <package>openssh</package>
    <package>pam-32bit</package>
    <package>pam-modules-32bit</package>
    <package>perl-XML-LibXML</package>
    <package>qt3</package>
    <package>rsh</package>
    <package>tuned-sap</package>
    <package>sap-locale</package>
    <package>screen</package>
    <package>smartmontools</package>
    <package>strace</package>
    <package>sudo</package>
    <package>sysstat</package>
    <package>unrar</package>
    <package>vim-base</package>
    <package>vim-data</package>
    <package>vim</package>
    <package>webyast-registration-ui</package>
    <package>webyast-registration-ws</package>
    <package>xrdp</package>
    <package>yast2-ncurses</package>
    <package>yast2-ntp-client</package>
    <package>yast2-online-update-frontend</package>
    <package>yast2-qt</package>
    <package>ypbind</package>
    <package>yp-tools</package>
  </post-packages>
  <post-patterns config:type="list">
    <pattern>webyast-ws</pattern>
    <pattern>webyast-ui</pattern>
  </post-patterns>
</software>
<scripts>
   <post-scripts config:type="list">
     <script>
        <feedback config:type="boolean">false</feedback>
        <debug config:type="boolean">false</debug>
        <filename>configure_HANA.sh</filename>
        <source><![CDATA[#!/bin/bash
#Create WebYast Icon for Desktop
mkdir -p /root/Desktop
cat >/root/Desktop/WebYast.desktop <<EOF
#!/usr/bin/env xdg-open

[Desktop Entry]
Encoding=UTF-8
Version=1.0
Type=Link
Icon[en_US]=gdm-suse
Name[en_US]=WebYast
URL=https://localhost:54984
Comment[en_US]=WebYast System Administration
Name=WebYast
Comment=WebYast System Administration
Icon=gdm-suse
EOF
]]></source>
     </script>
   </post-scripts>
</scripts>

</profile>
